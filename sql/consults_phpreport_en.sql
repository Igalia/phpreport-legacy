--
-- PostgreSQL database dump
--

SET client_encoding = 'UTF8';
SET standard_conforming_strings = off;
SET check_function_bodies = false;
SET client_min_messages = warning;
SET escape_string_warning = off;

SET search_path = public, pg_catalog;

--
-- Data for Name: consult; Type: TABLE DATA; Schema: public; Owner: -
--

COPY consult (id, title, sql, parameters, description, public) FROM stdin;
1	Worker Hours (by date, type)(NOT COMP)	SELECT uid, type, SUM(_end-init)/60.0 as sum_hours\r\nFROM task\r\nWHERE uid LIKE uid_trabajador AND \r\n   type LIKE type_name AND \r\n   _date>=fecha_inicio AND\r\n   _date<=fecha_fin\r\nGROUP BY uid, type	uid_trabajador,fecha_inicio,fecha_fin,type_name	Calcule worked hours from a user by a company task (type) over time slot ("fecha_fin" - "fecha inicio", format DD-MM-YYYY). This query dont take into account compensated hours.	t
29	Worker Hours (by date, project, text, type)	SELECT uid, type, name, text, SUM(_end-init)/60.0 - COALESCE((\r\n  SELECT SUM(hours)\r\n  FROM compensation\r\n  WHERE uid=task.uid\r\n   AND init>=fecha_inicio\r\n   AND _end<=fecha_fin\r\n ),0) AS suma_horas\r\nFROM task\r\nWHERE uid LIKE uid_trabajador AND \r\n   name LIKE project_name AND \r\n   type LIKE type_name AND \r\n   text LIKE task_text AND \r\n   _date>=fecha_inicio AND\r\n   _date<=fecha_fin\r\nGROUP BY uid, name, type, text	uid_trabajador,fecha_inicio,fecha_fin,type_name,project_name,task_text	Calculate worker hours over time slot ("fecha fin" - "fecha inicio", format: DD/MM/YYYY) by company task ("type"), project and project task text (task with same text are grouped).	t
37	Worker Hours (by date, project, story, task, type)(NULL include)	SELECT uid, type, name, phase, ttype, story, SUM(_end-init)/60.0 AS suma_horas\r\nFROM task\r\nWHERE uid LIKE uid_trabajador AND \r\n   name LIKE project_name AND \r\n   (story  LIKE story_name OR story is NULL) AND\r\n   (type LIKE type_name OR type is NULL) AND \r\n   (ttype LIKE tt_name OR ttype is NULL) AND \r\n   _date>=fecha_inicio AND\r\n   _date<=fecha_fin\r\nGROUP BY uid, name, phase, type, ttype, story	uid_trabajador,fecha_inicio,fecha_fin,story_name,type_name,tt_name,project_name	Calculate worked hours from a user by a company task ("type"), project task ("task"), project and story project over time slot ("fecha fin"-"fecha inicio", format: DD-MM-YYYY). It is useful query in order to view projects hours by use case.	t
15	List all Compensations	SELECT * FROM compensation		Compensation is a mechanism wich make posible change worked hours by money, holidays, etc. This extra hours will dont count when you generate "total worked hours recount". It will does seem that these hours never had exist, because they are compensated. <br />This query list all compensations.	f
30	Worker Hours (by project, type)	SELECT uid, type, name, SUM(_end-init)/60.0  AS suma_horas\r\nFROM task\r\nWHERE uid LIKE uid_trabajador AND \r\n   name LIKE project_name AND \r\n   type LIKE type_name \r\nGROUP BY uid, name, type	uid_trabajador,type_name,project_name	Calculate worker hours over time slot ("fecha fin"-"fecha inicio", format: DD/MM/AAAA) by project.	t
44	Worker Hours (by date, project, task, type)(NULL include, NOT COMP)	SELECT uid, type, name, phase, ttype, SUM(_end-init)/60.0 AS suma_horas\r\nFROM task\r\nWHERE uid LIKE uid_trabajador AND \r\n   name LIKE project_name AND \r\n   (type LIKE type_name OR type is NULL) AND \r\n   (ttype LIKE tt_name OR ttype is NULL) AND \r\n   _date>=fecha_inicio AND\r\n   _date<=fecha_fin\r\nGROUP BY uid, name, phase, type, ttype	uid_trabajador,fecha_inicio,fecha_fin,type_name,tt_name,project_name	Calculate worker hours over time slot ("fecha fin"-"fecha inicio", format: DD/MM/YYYY) by company task ("type"), project task ("task") and project. This query dont take into account compensated hours.	t
12	List all Workers Hours (over time slot)	SELECT uid, SUM(_end-init)/60.0 - COALESCE((\r\n  SELECT SUM(hours)\r\n  FROM compensation\r\n  WHERE uid=task.uid\r\n   AND init>=fecha_inicio\r\n   AND _end<=fecha_fin\r\n ),0) AS suma_horas\r\nFROM task\r\nWHERE _date>=fecha_inicio\r\n AND _date<=fecha_fin\r\nGROUP BY uid	fecha_inicio,fecha_fin	Calculate the worked hours from all users over time slot ("fecha inicio"-"fecha fin", format: DD/MM/YYYY). The compensated hours over this slot time are descounted.	t
34	Worker Hours (by date, project, story, type)	SELECT uid, type, name, story, SUM(_end-init)/60.0 - COALESCE((\r\n  SELECT SUM(hours)\r\n  FROM compensation\r\n  WHERE uid=task.uid\r\n   AND init>=fecha_inicio\r\n   AND _end<=fecha_fin\r\n ),0) AS suma_horas\r\nFROM task\r\nWHERE uid LIKE uid_trabajador AND \r\n   name LIKE project_name AND \r\n   story  LIKE story_name AND\r\n   type LIKE type_name AND \r\n   _date>=fecha_inicio AND\r\n   _date<=fecha_fin\r\nGROUP BY uid, name, type, story	uid_trabajador,fecha_inicio,fecha_fin,story_name,type_name,project_name	Calculate worker hours over time slot ("fecha inicio"-"fecha fin", format: DD/MM/YYYY) by company task ("type"), project and project story.	t
32	Project Hours	SELECT name, SUM(_end-init)/60.0 as hours\r\nFROM task\r\nWHERE \r\n   name LIKE project_name\r\nGROUP BY name\r\n	project_name	Show worked hours from a project (or all projects if you use % hack).	t
35	Worker Hours (by date, project, task, type)	SELECT uid, type, name, ttype,  SUM(_end-init)/60.0 - COALESCE((\r\n  SELECT SUM(hours)\r\n  FROM compensation\r\n  WHERE uid=task.uid\r\n   AND init>=fecha_inicio\r\n   AND _end<=fecha_fin\r\n ),0) AS suma_horas\r\nFROM task\r\nWHERE uid LIKE uid_trabajador AND \r\n   name LIKE project_name AND \r\n   type LIKE type_name AND \r\n   ttype LIKE ttipo_name AND\r\n   _date>=fecha_inicio AND\r\n   _date<=fecha_fin\r\nGROUP BY uid, name, type, ttype	uid_trabajador,fecha_inicio,fecha_fin,type_name,ttipo_name,project_name	Calculate worker hours over time slot ("fecha inicio"-"fecha fin", format: DD/MM/YYYY) by company task ("type"), project task ("task") and project.	t
31	List all Workers Hours (at current week)	SELECT uid, SUM(_end-init)/60.0 - COALESCE((\r\n  SELECT SUM(hours)\r\n  FROM compensation\r\n  WHERE uid=task.uid\r\n   AND init>=(current_timestamp - ((int2(date_part('dow',current_timestamp )+7-1) % 7)||' days')::interval)::date\r\n   AND _end<=(current_timestamp - ((int2(date_part('dow',current_timestamp)+7-1) % 7)-6||' days')::interval)::date\r\n ),0) AS suma_horas\r\nFROM task\r\nWHERE _date>=(current_timestamp - ((int2(date_part('dow',current_timestamp )+7-1) % 7)||' days')::interval)::date\r\n AND _date<= (current_timestamp - ((int2(date_part('dow',current_timestamp )+7-1) % 7)-6||' days')::interval)::date\r\nGROUP BY uid		This query calculates the worked hours from all users at current week. The compensated hours at current week are descounted.	t
13	Delete Worker Tasks and Reports (over time slot)	BEGIN TRANSACTION;\r\nDELETE FROM task WHERE uid=uid_trabajador AND _date>=fecha_inicio AND _date<=fecha_fin AND confirmacion='ok';\r\nDELETE FROM report WHERE uid=uid_trabajador AND _date>=fecha_inicio AND _date<=fecha_fin AND confirmacion='ok';\r\nCOMMIT TRANSACTION	uid_trabajador,fecha_inicio,fecha_fin,confirmacion	Delete all tasks and reports from user "uid_trabajador" over time slot ("fecha fin"-"fecha inicio", format: DD/MM/YYYY). It is necessary to introduce "ok" key at "confirmation" field. It is done to prevent delete reports by chance.	f
19	Worker Tasks (by date, project) 	SELECT uid,_date,\r\n to_char(init/60,'FM00')||':'||to_char(init%60,'FM00') as init,\r\n to_char(_end/60,'FM00')||':'||to_char(_end%60,'FM00') as _end,\r\n name,type,phase,ttype,story,text\r\nFROM task WHERE uid LIKE uid_trabajador AND name LIKE project_name AND _date>=fecha_inicio AND _date<=fecha_fin ORDER BY uid,_date,init	uid_trabajador, project_name,fecha_inicio,fecha_fin	List worker tasks over time slot ("fecha fin"-"fecha inicio", format: DD/MM/YYYY) by project.	t
14	Add Compensation	INSERT INTO compensation (uid,init,_end,hours,paid) VALUES (uid_trabajador,fecha_inicio,fecha_fin,num_horas,cantidad_pagada)	uid_trabajador,num_horas,fecha_inicio,fecha_fin,cantidad_pagada	This query inserts a new compensation into database. A compensation is a concept created to reduce extra hours in exchange of money. So, when a compensation is granted to a user, the total amount of worked hours is reduced by "num_hours" and the "cantidad_pagada" paid amount is annotated for accounting purposes.	f
16	Delete Compensation	DELETE FROM compensation WHERE uid=uid_trabajador AND init=fecha_inicio AND _end=fecha_fin	uid_trabajador,fecha_inicio,fecha_fin	Delete compensation in database from user "uid_trabajador" over time slot ("fecha fin"-"fecha inicio", format: DD/MM/YYYY). Delete will be successful only if time slot fit in with compensation.	f
26	Delete all Workers Reports (over time slot)	BEGIN TRANSACTION;\r\nDELETE FROM task WHERE _date>=fecha_inicio AND _date<=fecha_fin AND confirmacion='ok';\r\nDELETE FROM report WHERE _date>=fecha_inicio AND _date<=fecha_fin AND confirmacion='ok';\r\nCOMMIT TRANSACTION	fecha_inicio,fecha_fin,confirmacion	Delete all reports from all users over time slot ("fecha_fin" - "fecha inicio", format DD-MM-YYYY). It is necessary to introduce "ok" key at "confirmation" field. It is done to prevent delete reports by chance.	f
18	Delete Orphan Reports	DELETE FROM report WHERE (SELECT COUNT(*) FROM task WHERE task.uid=report.uid AND task._date=report._date)=0		Delete reports which dont have to link some task.	f
43	Worker Tasks (by date, project, type)	SELECT uid, _date, name, type, text\r\nFROM task\r\nWHERE uid LIKE uid_trabajador AND \r\n   name LIKE project_name AND \r\n   type LIKE type_name AND \r\n   _date>=fecha_inicio AND\r\n   _date<=fecha_fin\r\nGROUP BY uid, _date, name, type, text\r\nORDER BY _date	uid_trabajador,fecha_inicio,fecha_fin,type_name,project_name	An administrator role can blocks the edition report from user over time slot ("fecha_fin" - "fecha inicio", format DD-MM-YYYY) . The users cant to edit the reports at blocked days. This query list bloks from all users.	t
42	Project Hours (total VS time slot)	select tblTotal.name, horasTotal,horasAnho\r\nfrom\r\n (select sum(_end-init)/60.0 as horasTotal, name\r\n from task\r\n where name like nombre_proyecto\r\n group by name\r\n ) as tblTotal,\r\n (select sum(_end-init)/60.0 as horasAnho,name\r\n from task\r\n where name like nombre_proyecto\r\n  and _date>=fecha_inicio and _date<=fecha_fin\r\n group by name\r\n ) as tblAnho\r\nwhere tblTotal.name=tblAnho.name\r\n	nombre_proyecto, fecha_inicio, fecha_fin	Compare total hours from a project and hours from a project over slot time. It is only showed projects which they have tasks at slot time indicated.	f
11	List all Blocks	SELECT * FROM block		An administrator role can blocks the edition report from user over time slot. The users cant to edit the reports at blocked days. This query list bloks from all users.	f
10	List all Queries	SELECT * FROM consult ORDER BY id		List all definied queries.	f
23	List all Orphans Reports	SELECT * FROM report WHERE (SELECT COUNT(*) FROM task WHERE task.uid=report.uid AND task._date=report._date)=0		Orphan reports havent linked some task. This query list all orphans reports.	f
2	List all Workers Tasks	SELECT * FROM task ORDER BY uid,init		List all worker tasks order by user and date.	f
46	Project Stories Duration (by days, hours)(NOT COMP)	SELECT min(_date) as fecha_inicio,\r\n       max(_date) as fecha_fin,\r\n       (max(_date)-min(_date)+1) as duracion_dias,\r\n       trim(story) as nombre_story,\r\n       SUM(_end-init)/60.0  AS suma_horas\r\nFROM task\r\nWHERE\r\n   name LIKE project_name AND\r\n   (story LIKE story_name OR story IS NULL)\r\nGROUP BY name, story\r\nORDER BY fecha_inicio\r\n	project_name,story_name	Show days and hours from each project story. This query dont take into account compensated hours. Originally, compensated hours were taken into account, but it caused wrong conclusions about real worked hours into a project. For this, now dont take in account compensated hours.	t
45	Project Hours (over time slot)	SELECT name, SUM(_end-init)/60.0 - COALESCE((\r\n  SELECT SUM(hours)\r\n  FROM compensation\r\n  WHERE init>=fecha_inicio\r\n   AND _end<=fecha_fin\r\n ),0) AS suma_horas\r\nFROM task\r\nWHERE name LIKE project_name AND \r\n   _date>=fecha_inicio AND\r\n   _date<=fecha_fin\r\nGROUP BY name	fecha_inicio,fecha_fin,project_name	Show worked hours from a project over time slot.	t
41	Worker Hours (by date, project, type)(NOT COMP)	SELECT uid, type, name, SUM(_end-init)/60.0 as sum_hours\r\nFROM task\r\nWHERE uid LIKE uid_trabajador AND \r\n   name LIKE project_name AND \r\n   type LIKE type_name AND \r\n   _date>=fecha_inicio AND\r\n   _date<=fecha_fin\r\nGROUP BY uid, name, type	uid_trabajador,fecha_inicio,fecha_fin,type_name,project_name	Calculate worker hours over time slot ("fecha_fin" - "fecha inicio", format DD-MM-YYYY) by company task ("type") and project.	t
\.
